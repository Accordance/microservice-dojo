buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
//        classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'
//apply plugin: "io.spring.dependency-management"

project.ext {
    springBootVersion = '1.3.1.RELEASE'
//    springCloudVersion = '1.1.0.M4'
    springCloudVersion = '1.0.3.RELEASE'
}

jar {
    group = 'msvcdojo'
    baseName = 'gateway-service'
    version = '0.0.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
//    maven {
//        url 'http://repo.spring.io/milestone'
//    }
}
dependencyManagement {
//    imports {
//        mavenBom "org.springframework.cloud:spring-cloud-netflix:$springCloudVersion"
//    }
}

bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    compile ('org.springframework.boot:spring-boot-starter-jetty') {
        exclude group: 'org.eclipse.jetty.websocket'
    }
    compile("org.springframework.cloud:spring-cloud-config-client:$springCloudVersion")
    compile("org.springframework.cloud:spring-cloud-starter-eureka:$springCloudVersion")
    compile("org.springframework.cloud:spring-cloud-starter-zuul:$springCloudVersion")
    compile("org.springframework.cloud:spring-cloud-netflix-core:$springCloudVersion")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task prepDocker(type: Copy, dependsOn: assemble) {
    from 'docker'
    into "$buildDir/docker"
    include 'Dockerfile.template'
    rename { file -> 'Dockerfile' }
    expand(project: project, jar: jar )
    doFirst {
        copy {
            from jar
            into "$buildDir/docker"
        }
    }
}

task buildDocker(type: Docker, dependsOn: prepDocker) {
    useApi = false
    tag = "${jar.group}/${jar.baseName}"
    tagVersion = jar.version
    dockerfile = file("$buildDir/docker/Dockerfile")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}